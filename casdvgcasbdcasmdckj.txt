SK Somaiya College
________________
Practical 1 
Installation of VMware and Red Hat Linux
Steps : 
Installation and Setup of VMware : 
1. Install VMware Workstation. Then open the setup wizard.
2. After clicking on Next, read the End-User License Agreement and then click on the Accept checkbox. Then click on Next.
3. Change the installation location as per your wish and then click on Next.
4. Finally click on “Install”  
The VMware Workstation is now being installed.
5. Click on Finish.
6. Open VMware Workstation after the installation is complete and select “Use VMware Workstation for free for non-commercial use” and click on “Continue”.

Installation of RHEL


1. The VMware homepage is displayed after the installation and setup.
Click on “Create a New Virtual Machine”

2. Then browse for the ISO file in the directory and open it. Then click on Next

3. Create a user and fill in the details of the user such as the username, password etc and then click on Next
  

4. Enter the name of the virtual machine and then click on Next

5. Specify the disk capacity (20.0 by default) and the partition configurations. 
Then click on Next.

6. Verify all the settings before clicking on Finish.

7. Log in to the user and enter the login details and then click on Log In 

________________


Basic Commands


To get to the Linux Terminal, Click on Applications => System Tools => Terminal


1. ls: The ls command in Linux is a shell command that lists the contents of a directory.

2. vi  (file_name): The vi command in Linux is a text editor that allows you to create and edit files in a terminal window. 


3. ls -l: The ls -l command in Linux is a shell command that lists the contents of a directory in a long listing format.


4. ls -i: The ls -i command in Linux is a shell command that lists the contents of a directory and shows the inode number of each file and directory.

5. ls -l n*:The ls -l n* command in Linux is a shell command that lists the contents of the current directory that start with the letter n and shows detailed information about them in a long listing format. 

6. chmod 700 (file_name): The chmod 700 command in Linux is a shell command that sets the permissions of a file or directory to 700. This means that the owner of the file or directory has read, write, and execute permissions, and no one else has any permissions.

7. chmod 600 (file_name): The chmod 600 command in Linux is a shell command that sets the permissions of a file or directory to 600. This means that the owner of the file or directory has read and write permissions, and no one else has any permissions.

8. chmod 444 (file_name): The chmod 444 command in Linux is a shell command that sets the permissions of a file or directory to 444. This means that the owner, group, and others of the file or directory have only read permissions, and no one has to write or execute permissions.

9. chmod 666 (file_name): The chmod 666 command in Linux is a shell command that sets the permissions of a file or directory to 666. This means that the owner, group, and others of the file or directory have read and write permissions, and no one has executed permissions.

10. man ls: The man ls command in Linux is a shell command that displays the manual page for the ls command.

11. clear: The clear command in Linux is a shell command that is used to clear the terminal screen.
  

12. pwd: The pwd command in Linux is used to print the full path of the current working directory.
  

13. ls -R: The ls -R command in Linux is used to list the contents of a directory and its subdirectories recursively. This means that it will display all the files and folders in the current directory, and then go into each subdirectory and show its contents, and so on.
  



14. ls -d: The ls -d command in Linux is used to list directories themselves, rather than their contents. This can be useful when you want to display only the directories from within your current directory, or when you want to show the full path of a specific directory.
  



15. ls -RL: The ls -RL command in Linux is used to list the contents of a directory and its subdirectories recursively, and to follow symbolic links to their targets. This means that it will display all the files and folders in the current directory, then go into each subdirectory and show its contents, and also show the files and folders that are linked by any symbolic links in the directory tree.


  



16. whoiam: The whoami command in Linux is used to display the username of the current user who is logged in to the system.


  



17. who: The who command in Linux is used to display information about currently logged-in users on the system. It can also show other useful information, such as the time of the last system boot, the current run level, the active processes, and more.


  



18. ps: The ps command in Linux is used to view information about the processes running on your system.
  

19. man man: The man man command in Linux is used to display the manual page for the man command itself.
  



  



20. cat (file_name_1) > file_name_2: The cat (file_name_1) > (file_name_2) command in Linux is used for copying the contents of one file to another file. It concatenates the contents of file_name_1 and redirects the output to file_name_2.
  



  



21. paste file_name_1 file_name_2: The paste file_name_1 file_name_2 command in Linux is used for merging the corresponding lines of two files horizontally, separated by a tab character. It outputs the merged lines to the standard output.


  



22. cat file_name_1 >> file_name_2: The cat file_name_1 >> file_name_2 command in Linux is used for appending the contents of one file to the end of another file. It concatenates the contents of file_name_1 and redirects the output to file_name_2. If file_name_2 does not exist, it will be created. If it already exists, it will be appended.


  



  

________________


Practical 2
Working with users, groups and permissions


i. Users : 


1. Open the Linux Terminal and login as the root user.


Code : 
su - root 
Note : $ sign is for normal user while # sign is for root users
  



2. Then, add a new user with the username as “newuser” and password as “Newuser@123”


Code : 
useradd newuser
passwd newuser
  



3. Then use the “ls -l” command to list the various directory contents of files in the root directory.


Code : 
ls -l
  



4. Enter the administrative “/etc/password” file using the vim editor


Code : 
vi /etc/passwd
( Use :q to quit)
  



ii. Groups : 


1. Create a new file using the vim editor named file1 in the root user.


Code : 
vi file1
  



Enter some text into the file by using the 
i key for insert 
:w to write
:q to quit
  



2. Then copy the file created in the root to the new user’s directory by using the cp command.


Code : 
cp file1 /home/newuser
  



3. Change the terminal user to the newuser and list their directory contents


Code : 
su - new user
ls -l
ls
  



4. Change it back to the root 


Code : 
su - root
  



5. Then change the group of the file from root to the new user using the chgrp command.


Code : 
chgrp newuser file1
  



6. Change the ownership of the file from root to the new user using the chown command.


Code : 
chown newuser file1
  



If you want to change the group of multiple files starting with the same letter then you can use a * after specifying the first letter of the files.


Code : 
chgrp newuser f*
  



iii. Permissions


The chmod command is used to change the access mode of a file. 


Code : 
chmod 777 f* 


Here, the permissions given to both the files i.e file1 and file2 is that the file is readable and executable by anybody on the system
  
________________

Practical 3 
Initial settings: Add a User, Network Settings, change to static IP address, Disable IPv6 if not needed, Configure Services, display the list of services which are running, Stop and turn OFF auto-start setting for a service if you don’t need it, Sudo Settings


________________


Practical 4 
SSH Server: Password Authentication : Configure SSH Server to manage a server from the remote computer, SSH Client


Steps : 


1. Open the Linux Terminal and go to root user and check if ssh is installed.


Code : 
su - root
rpm -qa openssh*
  



2. Then check sshd service status using the service status command. 


Code : 
service sshd status
  



3. Restart sshd service by using the service restart command.


Code : 
service sshd restart
  



4. Use the ifconfig command to get the ip address 


Code : 
ifconfig
  



5. Check connectivity from SSH server using the ping command


Code : 
ping <ip address>


  



6. Add two users and set the password for both of them.


Code : 
useradd user1
passwd user1 (pass is user1@123)
useradd user2
passwd user2 (pass is user2@123)
  



7. Open the ssh configuration file i.e sshd_config


Code : 
vi /etc/ssh/sshd_config
  

Check the value of the PasswordAuthentication directive. In order to accept local user password based authentication it must be set to yes. Set it to yes if it is set to no and save the file.
  



8. Restart the service if you have made any change in sshd_config


Code : 
service sshd restart
  



9. Log in as the first user by this command and provide the password when asked.


Code : 
ssh (username)@(ipaddress): 
  



10. Confirm that you have logged in to the user by using the who am i command.


Code : 
who am i
  



11. Exit the user1 and perform the same commands for the second user i.e user2.


Code : 
exit
ssh (username)@(ipaddress): 
who am i 
exit
  



User and Host based security : 
12. In order to make the server more restrictive, open the ssh configuration file once again


Code : 
vi /etc/ssh/sshd_config
  



13. Add the following lines at the end of the file and save it using the :wq command.


PermitRootLogin no
DenyUsers user1
  



14. Restart the ssh server and try logging in using user one and root. 


Code : 
service sshd restart
ssh (username)@(ipaddress): 
  



ssh root@ipaddress
  



15. Next, try with user2 and it allows you to login


Code : 
ssh user2@ipaddress
exit
  



Public key : 


16. Open the configuration file and uncomment following directives and save the file
RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
  

  



17. Restart the sshd service using the service restart command


Code : 
service sshd restart
  



18. Login to the server from user2   


Create a ssh directory with permission 755


Code : 
mkdir ~/.ssh
chmod 755 ~/.ssh
exit
  



19. Generate the public/private key pair using the ssh-keygen command. Then press enter to accept the default location for the key file


Code : 
ssh-keygen -t rsa
  



20. Enter the passphrase “I love linux” and confirm the passphrase 
  



21. The public key is stored in the /home/user2/.ssh/id_rsa.pub. Create a copy of the public key. 
Then Copy the authorized_keys file on the server to /home/user2/.ssh/authorized_keys. Enter user2 [user account on server] password when asked. 


Code : 
cat ~/.ssh/id_rsa.pub >> authorized_keys
scp authorized_keys user2@192.168.1.3:/home/user2/.ssh/
  

Then exit out of the server.
  



22. Go to the user2 and set the permission to 644 for authorized_keys 


Code : 
su user2
chmod 644 ~/.ssh/authorized_keys
  



23. Go to the root user and restart the service 


Code : 
service sshd restart
  



24. Login into the ssh client from user2 and then enter the passphrase “I love linux”


Code :  
ssh user2@192.168.1.3
ssh -l user2 192.168.1.3
  



Then exit 
  



25. Go to the root user and open the configuration file


Code : 
su - root
vi /etc/ssh/sshd_config
  



26. Uncomment the following line and change its value to 2223


Port 22
  



27. Restart the service using the service restart command


Code : 
service sshd restart
  



28. Now try to connect to the ssh client with user 2 and the connection will be refused


Code : 
ssh -l user2 192.168.1.3
  



29. Try connecting the ssh client now by specifying the new port 


Code : 
ssh -l user2 192.168.1.3 -p 2223
  

________________


Practical 5 
Installing and Configure of FTP server


Steps : 


1. Go to the root user and then navigate to the Packages directory


Code : 
su - root
cd /media/RHEL….. 1/Packages/
  



2. Check if the vsftpd and the ftp packages are installed. If not, then install the vsftpd and ftp package


Code : 
rpm -qa | grep vsftpd 
rpm -ivh vsftpd* 
rpm -ivh ftp*
  



3. Check if vsftpd and ftp is installed once again


Code : 
rpm -qa | grep vsftpd
  



rpm -qa | grep ftp
  



4. Use the chkonfig command to start the vsftpd services at boot time 


Code : 
chkconfig vsftpd on
chkconfig –list | grep ftp
  



5. Then navigate to the /var/ftp/pub/ directory using the cd command and create a file for testing ftp.


Code : 
cd /var/ftp/pub/
cat -> ftpfile


(ctrl + d to save and exit)
  



To check contents of file
cat ftpfile
  



6. Verify IP address of linux machine to be configured as FTP.
  



7. Open configuration file and make following changes
i. Uncomment anonymous_enable = YES
ii. Uncomment  local_enable = YES
iii.Uncomment  anonymous_upload_enable = YES
iv. Uncomment listen = YES


Code : 
vi /etc/vsftpd/vsftpd/conf
  

  

  

  



8. Then restart the vsftpd service using the service restart command.


Code : 
service vsftpd restart
service vsftpd status
service vsftpd restart
  



9. Go back to the main directory using the cd command and then login with an anonymous user.


Code : 
cd
ftp <ip address>
Name : anonymous
Password : (just click enter)
  



Then, use ls –a command to view the content of ftp home directory.


Code : 
ls -a
bye (to exit out of ftp)
  



10. Now allow ftp anonymous write enable by using the setsebool command


Code : 
getsebool –a | grep ftp
setsebool –P allow_ftp_annon_write on or = 1
getsebool –a | grep ftp
  

11. Then allow system users to get access to ftp server by turning the ftp_home_dir on using the setsebool command.


Code : 
getsebool –a | grep ftp
setsebool –P ftp_home_dir on
getsebool –a | grep ftp
  



12. By default the /var/ftp is in the ftp root user’s home directory. Check the context of file
/var/ftp/pub and change the group and owner to ftp.


Code : 
ls –ldZ /var/ftp/pub
chgrp ftp /var/ftp/pub
chown ftp /var/ftp/pub
ls –ldZ /var/ftp/pub


  



13. Go to the pub directory using the cd command and create a file named ftptest and enter some text. 


Code : 
cd /var/ftp/pub
touch T1 T2 T3
cat > ftptest


(to save and exit : ctrl +d)
  



15.Fo to the Packages directory and then restart the service of vsftpd and enable it from boot.


Code : 
Cd /media/RHEL  1/Packages/
service vsftpd start
service vsftpd restart
chkconfig vsftpd on
chkconfig –list | grep vsftpd
  



Now FTP has been configured.


16. Now, we do the testing as an FTP client


Code : 
ftp <ip address>
Name : anonymous
Password : (just click enter)


Here, it allows anonymous user to log in
  



17. Then, we disable the anonymous user to use FTP login 
Open configuration file.


Code : 
cd /var/ftp/pub
vi /etc/vsftpd/vsftpd.conf


i) Go to directive anonymous _enable = YES and make it anonymous
_enable = NO.
ii) Go to directive anonymous_upload_enable = YES and make it
anonymous_upload_enable = NO.


(:wq to save and quit)


  

  



18. Restart the vsftpd service by used the service restart command


Code : 
service vsftpd restart


  



19. Then, try logging into ftp as an anonymous user.


Code : 
ftp <ip address>
Name : anonymous
Password : (just click enter)


Login will be incorrect
  

________________


Practical 6 
Configure DHCP (Dynamic Host Configuration Protocol) Server


Steps : 


1. Open the Linux Terminal, then go to the root user and navigate to the Packages directory


Code : 
su - root
cd /media/RHEL….. 1/Packages/
  



2. Check if the dhcp package is installed. If not, then install the dhcp package


Code : 
rpm -qa | grep dhcp 
rpm -ivh dhcp*
  



3. Check if the dhcp package is installed once again.


Code : 
rpm -qa | grep sdhcp
  



4. Check hostname of the linux system


Code : 
hostname
  



5. Now check dhcpd service in system service it should be on


Code : 
setup
  



Select Network configuration and click Enter.
  



Then select Device configuration and click Enter.
  



Select the LAN card (here it is eth0)
  

Select “Use DHCP” option and remove the * in between the brackets.   


Then enter the IP address (192.168.1.3)  as well as the Netmask (255.255.255.0). Then click on OK
  



Then click on Save
  

Then click on “Save&Quit”
  



Then click on Quit
  



6. Now open the main configuration file of dhcp 


Code : 
vi /etc/dhcp/dhcpd.conf
  



  





7.  Copy the /usr/share/doc/dhcp-4.1.1/dhcpd.conf.sample file to the configuration file using the cp command.


Code : 
cp /usr/share/doc/dhcp-4.1.1/dhcpd.conf.sample file /etc/dhcp/dhcpd.conf
  



8. Now open the configuration file once again


Code : 
vi /etc/dhcp/dhcpd.conf 
  

  

9. Then uncomment line number 18
  



10. Then comment line number 27 and line number 28  


Change these lines number 32 and 33 to 
Subnet 198.168.1.0 netmask 255.255.255.0 
{
Range 192.168.1.10 192.168.1.20; 
}
  



Comment line number 34
  

Then save the file


11.  Then start and restart the dhcpd service using the service start and service restart commands


Code : 
service dhcpd status
service dhcpd start
service dhcpd restart
  



12. Use the chkonfig command to start the dhcpd services at boot time


Code : 
chkconfig –list dhcp
chkconfig dhcp on
chkconfig –list dhcp
  

________________


Practical 7 
Install and configure NFS server.


Steps : 


1. Go to the root user and then navigate to the Packages directory. Check if the nfs package is installed


Code : 
su - root
cd /media/RHEL….. 1/Packages/
rpm -qa | grep nfs
  



2. If packages are not installed, then install the nfs package


Code : 
rpm -ivh nfs* 
  



3. Check if the nfs package installed once again


Code : 
rpm -qa | grep nfs
  



4. Verify IP address of the linux machine to be setup as NFS Server:


Code : 
ifconfig eth0
  

5. Make a directory to be exported, create few files into it and give it full permission


Code : 
cd /home/
mkdir servernfs
cd servernfs
cat > newfilenfs
(enter text) 


(ctrl + d to save and exit)
  



6. Open the configuration file of NFS, i.e, /etc/exports 


Code : 
vi /etc/exports 
  



Write the following lines in the file :
/home/servernfs * (rw,sync)
  

The above entry says that server export directory has been exported to the network 192.168.1.3


7. Save and quit the file. (shift + zz) 
Then restart the service of nfs and enable it from boot


(NOT WORKING??)
  
________________

Practical 8
Apache Server


Steps : 


1. Open the terminal and go to the root user


Code : 
su - root
  



2. Use the ifconfig command to find the ip address of your machine and remember it.


Code : 
ifconfig
  



3. Use the yum command to check if yum is working fine before we try to install httpd


Code : 
yum list all
  

  



4. Use the yum command to install httpd


Code : 
yum install httpd*
  



5. Then open the httpd configuration file in vim editor


Code : 
vi /etc/httpd/conf/httpd/conf
  



Go to the end of the file, uncomment the following lines and make the changes. Then save the file.
<VirtualHost *:80>
        ServerAdmin localhost
        DocumentRoot /var/www/html
        DirectoryIndex linuxman.html
</VirtualHost>
  

6. Then go to the /var/www/html directory using the cd command and check if there is any error in the configuration file using httpd -t


Code : 
cd /var/www/html
httpd -t
  



7. Create a new file in the /var/www/html folder and enter some text. Then save the file.


Code : 
vi linuxman.html
  

  



8. Then restart the httpd service using the service restart command


Code : 
service httpd restart
  



9.
  



  

  

  



  







  



  











________________


Practical 9
Programs


1. Reverse of a number 


Code : 


echo Accept number : 
read num
rev=0
rem=0
if [ $num -le 0 ]
then
echo Invalid Number!
exit 
fi
while [ $num -ne 0 ]
do
rem=`expr $num % 10`
rev=`expr $rem + $rev \* 10`
num=`expr $num \/ 10`
done
echo reverse number is $rev
  



Output : 
  

2. Decimal to binary conversion


Code : 


echo Accept number :
read deci 
bin=0
p=1
rem=0
while [ $deci -gt 0 ]
do
rem=`expr $deci % 2`
bin=`expr $bin + $rem \* $p`
p=`expr $p \* 10`
deci=`expr $deci \/ 2`
done
echo Binary number is $bin
  



Output : 
  

________________


3.Code  :  Binary to decimal






echo Accept number :
read bin 
deci=0
p=1
rem=0
while [ $bin -gt 0 ]
do
rem=`expr $bin % 10`
deci=`expr $deci + $rem \* $p`
p=`expr $p \* 2`
bin=`expr $bin \/ 10`
done
echo Decimal number is $deci
  



Output : 
  
________________

4. Decimal to Octal


Code : 
echo Accept number :
read deci 
if [ $deci -lt 1 ]
then
echo invalid number
exit
fi
oct=""
rem=0
while [ $deci -gt 0 ]
do 
rem=`expr $deci % 8`
oct="$rem$oct"
deci=`expr $deci \/ 8`
done
echo Octal number is $oct
  





Output : 
  

________________


5. Convert lowercase to uppercase


Code  : 
if [ $* -le 2 ] 
then
echo insufficient arguments
fi


if [ ! -f $1 ]
then
echo File name does not exist
fi


echo Converting lowercase to uppercase
cat $1 | tr '[a-z]' '[A-Z]'
  



Output : 
  



5. Convert uppercase to lowercase


Code  : 
if [ $* -le 2 ] 
then
echo insufficient arguments
fi


if [ ! -f $1 ]
then
echo File name does not exist
fi


echo Converting lowercase to uppercase
cat $1 | tr '[A-Z]' '[a-z]'
  



File1 : 
  

 
Output :