#practical-1
name <- "mehul"
age <- 20
name
age

for (i in 1:10) print(i)

text <- "pawsome"
paste("py is", text)

var1 <- var2 <- var3 <- "mehul"

x <- 5
if (x > 10){
  print(paste(x,"is greater than 10"))
} else if(x<10){
  print(paste(x,"is less than 10"))
} else {
  print("x is equal to 10")
}


fruits <- c("banana","apple","orange")
fruits

numbers <- 1:10
numbers

sort(fruits)
sort(numbers)


fruits[1]
fruits[3]
length(fruits)

fruits[c(1,3)]


#practical 2 time series analysis
rainfall <- c(100,200,300,400,500,600,70,800,900)
rainfall.timeseries <- ts(rainfall, start = c(2012, 1), frequency = 12)
print(rainfall.timeseries)
plot(rainfall.timeseries, main= "Rainfall Time Series")


# practical 3 time series analysis
# abline
# aggregate 
# box plot
data("AirPassengers")
class(AirPassengers)
start(AirPassengers)
end(AirPassengers)
frequency(AirPassengers)
summary(AirPassengers)
plot(AirPassengers)
abline(reg = lm(AirPassengers~time(AirPassengers)))
cycle(AirPassengers)
boxplot(AirPassengers~cycle(AirPassengers))

plot(aggregate(AirPassengers,FUN=mean))


# practical 4 analysis variance
data("cars")
plot(cars)
reg <- lm(speed~dist,data=cars)
plot(reg)


# practical 5 linear regression (user defined)
height <- c(43,65,6,36,56,4335,43,7564,7,4764,7,4764)
weight <- c(43,5,6,6,36,465,65,7,5645,547,647,45)
student <- lm(weight~height)
print(student)

plot(student)
predict(student, data.frame(height=43), interval = "confidence")


# practical 5 multiple linear regression

df <- datasets::cars
my_linear_model <- lm(dist~ speed,data = df)
print(my_linear_model)
plot(my_linear_model)
lm(formula = dist ~speed, data =df)


variable_speed <- data.frame(speed= c(11,12,13,14,15,16,17,18,19,20))
linear_model <- lm(dist~ speed , data = df)
predict(linear_model , newdata = variable_speed)

predict(linear_model , newdata = variable_speed, interval = "confidence")


# practical 6 hypothesis testing

x <- rnorm(100)
t.test(x,mu=5)

x <- rnorm(100)
y <- rnorm(100)
t.test(x,y)

# directional hypothesis
x <- rnorm(100)
t.test(x,mu=2, alternative = 'greater')


dataf <- seq(1,2,by=1)
dataf
mean(dataf)
sd(dataf)
sd(dataf)
a<- t.test(dataf,alternate="two-sided", mu=10, conf.int.int=0.95)
a


# practical 7 Decision tree
install.packages("party")
library(party)
print(head(readingSkills))

input.dat<-readingSkills[c(1:105),]
output.tree <-ctree(nativeSpeaker ~age + shoeSize+score, data=input.dat)
plot(output.tree)


# practical 8 logistic regression
input <- mtcars[, c("am", "cyl", "hp", "wt")]
am.data = glm(formula = am ~ cyl +hp +wt, data = input, family = binomial)
print(summary(am.data))
plot(am.data)


# practical 9 k means clustering
install.packages("ggplot2")
library(ggplot2)
df <-iris
head(iris)
ggplot(df, aes(Petal.Length, Petal.Width)) +geom_point(aes(col =Species), size = 4)
set.seed(101)
irisCluster <-kmeans(df[,1:4],center=3,nstart=20)
irisCluster
install.packages("cluster")
library(cluster)
clusplot(iris,irisCluster$cluster,color=T,shade=T,labels=0,lines=0)