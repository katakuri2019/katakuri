https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/119.0.6045.105/win64/chromedriver-win64.zip



Practical-2: Right and test a program to login a specific web page

import org.openqa.selenium.WebDriver; 
import org.openqa.selenium.WebElement; 
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.By;
public class ex { 
    public static void main(String[] args) { 
        // Set the path to the ChromeDriver executable
        System.setProperty("webdriver.chrome.driver", "C:\\Users\\USER\\Desktop\\practical\\chromedriver-win64\\chromedriver.exe"); 
        // Create a new instance of the ChromeDriver
        WebDriver driver = new ChromeDriver(); 
        // Navigate to the Gmail login page 
        driver.get("https://www.facebook.com/"); 
        // Find the email input field and enter your email 
        WebElement emailInput = driver.findElement(By.id("email")); 
        emailInput.sendKeys("anshpurohit04@gmail.com");

        WebElement passwordInput = driver.findElement(By.id("pass"));
        passwordInput.sendKeys("Kaustubh_1489");
        // Click the "Next" button 
        WebElement passwordNextButton = driver.findElement(By.name("login"));
        passwordNextButton.click(); 

        try {
            Thread.sleep(10000);
        }catch (Exception e) {
            // TODO: handle exception
        }
        driver.quit(); 
        }
    }    


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Practical 5: Write an HTML program to calculate the HCF and GCD of two
numbers. Then, write a code in Eclipse to automatically check if the HTML
calculates the HCF and GCD.

HTML CODE:

<html>
<head>
<script type ="text/javascript">
function gcd()
{
var x,y;
x=parseInt(document.myform.n1.value);
y=parseInt(document.myform.n2.value);
while(x!=y)
{
if(x>y)
x=x-y;
else
y=y-x;
}
document.myform.result.value=x;
}
</script>
</head>
<body>
<h1 >Program to calculate gcd of 2 numbers</h1>
Enter Two numbers:
<form name ="myform">
Number 1 :<input type="text" name="n1" value =" ">
<br><br>
Number 2 :<input type="text" name="n2" value =" ">
<br><br>
<input type="button" value ="get GCD"
onClick="gcd()"><br><br>
GCD is :<input type="text" name="result" value="">
</body>
</html>


eclipse code:

package gcd;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
public class gcd {

	public static void main(String[] args) {
		System.setProperty("webdriver.chrome.driver","C:/Users/kaust/Documents/Downloads/chromedriver-win64/chromedriver-win64/chromedriver.exe");
		WebDriver driver = new ChromeDriver();
		driver.get("C:/Users/kaust/Desktop/gcd.html");
		driver.manage().window().maximize();
		driver.findElement(By.name("n1")).sendKeys("20");
		driver.findElement(By.name("n2")).sendKeys("40");
		driver.findElement(By.name("Get GCD")).click();
		String result =
		driver.findElement(By.name("result")).getAttribute("Values");
		System.out.println("Result is:"+result);
		}
		}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

(Practical 6)
Write a code in Eclipse to find/calculate the number of different web
elements on google page. 

eclipse code:

import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
public class T {
public static void main(String[] args) {
System.setProperty("webdriver.chrome.driver","C:/Users/kaust/Documents/Downloads/chromedriver-win64/chromedriver-win64/chromedriver.exe");

WebDriver driver=new ChromeDriver();
driver.get("https://www.google.com");
List <WebElement> mylist= driver.findElements(By.xpath("//a"));
System.out.println("Number of object =" +mylist.size());
}
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Practical 7:
Write an HTML code for a web page with radio buttons as well as
checkboxes. Then, write a code in Eclipse to check the number of checkboxes
and radio buttons that have been selected/checked on that web page

HTML CODE (Radio.html):

<html>
<body>
<form>
<h2>Select Gender</h2>
<input type="radio" name="gender" value="male"
checked> Male<br>
<input type="radio" name="gender" value="female">
Female<br>
<input type="radio" name="gender" value="other"
checked> Other<br>
<h2>Select Languages Known</h2>
<input type="checkbox" name="lang" value="Java"
checked="checked"> Java<br>
<input type="checkbox" name="lang" value="PHP"
checked="checked"> PHP<br> <input type="checkbox"
name="lang" value="C#"> C#<br>
<input type="checkbox" name="lang" value="Python"
checked="checked"> Python<br> <input
type="checkbox" name="lang" value="Ruby"> Ruby<br>
<br><br>
<input type="submit" value="Submit">
</form>
</body>
</html>

eclipse code:


import java.util.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
public class E {
public static void main(String args[])
{
System.setProperty("webdriver.chrome.driver","C:/Users/kaust/Documents/Downloads/chromedriver-win64/chromedriver-win64/chromedriver.exe");
WebDriver driver = new ChromeDriver();
driver.get("C:/Users/kaust/Desktop/E.html");
int chk = 0;
int unchk = 0;
int rchk = 0;
int runchk = 0;
List <WebElement> els =
driver.findElements(By.xpath("//input[@type='checkbox']")); for(WebElement el :els)
{
if(el.isSelected()) {
chk++;
}
else{
unchk++;
}
}
System.out.println("Total checked items" + chk);
System.out.println("Total unchecked items" + unchk);
List <WebElement> elm =
driver.findElements(By.xpath("//input[@type='radio']")); for(WebElement ell : elm)
{
if(ell.isSelected()) {
rchk++;
}
else{
runchk++;
}}
System.out.println("Total checked radio items" + rchk);
System.out.println("Total unchecked radio items" + runchk);}}


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Practical 8: 
Excel Record updation automation using Eclipse and Selenium
using the jxl.jar file

eclipse code:

import java.io.File;
import java.io.IOException;
import java.util.Locale;
import jxl.CellView;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.format.UnderlineStyle;
import jxl.write.Formula;
import jxl.write.Label;
import jxl.write.Number;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableWorkbook;
import jxl.write.WritableSheet;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;
public class S {
private WritableCellFormat timeBoldUnderline;
private WritableCellFormat times;
private String inputFile;
public void setOutputFile(String inputFile) {
this.inputFile = inputFile;
}
public void write() throws IOException, WriteException {
File file = new File(inputFile);
WorkbookSettings wbSettings = new WorkbookSettings();
wbSettings.setLocale(new Locale("en","EN"));
WritableWorkbook workbook = Workbook.createWorkbook(file,
wbSettings);
workbook.createSheet("Report", 0);
WritableSheet excelSheet = workbook.getSheet(0);
createLabel(excelSheet);
createContent(excelSheet);
workbook.write();
workbook.close();
}
private void createLabel(WritableSheet sheet) throws WriteException {
WritableFont time10pt = new WritableFont(WritableFont.TIMES, 10);
times = new WritableCellFormat(time10pt);
times.setWrap(true);

WritableFont times10ptBoldUnderline = new
WritableFont(WritableFont.TIMES , 10 , WritableFont.BOLD , false,
UnderlineStyle.SINGLE);
timeBoldUnderline = new WritableCellFormat(times10ptBoldUnderline);
timeBoldUnderline.setWrap(true);
CellView cv = new CellView();
cv.setFormat(times);
cv.setFormat(timeBoldUnderline);
addCaption(sheet, 0,0, "Student Name");
addCaption(sheet, 1,0, "Subject 1");
addCaption(sheet, 2,0, "Subject 2");
addCaption(sheet, 3,0, "Subject 3");
}
private void createContent(WritableSheet sheet) throws WriteException,
RowsExceededException {
for (int i = 1; i<10;i++) {
addLabel(sheet, 0, i, "Student " +i);
addNumber(sheet, 1, i, ((i*i)+10));
addNumber(sheet, 2, i, ((i*i)+4));
addNumber(sheet, 3, i, ((i*i)+3));
}
}
private void addCaption(WritableSheet sheet, int column, int row, String s)
throws RowsExceededException, WriteException {
Label label;
label = new Label(column, row, s, timeBoldUnderline);
sheet.addCell(label);
}
private void addNumber(WritableSheet sheet, int column, int row, Integer
integer)
throws RowsExceededException, WriteException {
Number number;
number = new Number(column, row, integer, times);
sheet.addCell(number);
}
private void addLabel(WritableSheet sheet, int column, int row, String s)
throws RowsExceededException, WriteException {
Label label;
label = new Label(column, row, s, times);
sheet.addCell(label);
}
public static void main(String[] args) throws WriteException, IOException {
S test = new S();

test.setOutputFile("C:/Users/kaust/Desktop/Book2.xlsx");
test.write();
System.out.println("Please check the result file under C:\\excel");
}
}
